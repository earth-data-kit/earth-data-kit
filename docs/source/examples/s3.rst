AWS S3
======

This example demonstrates how to use the Earth Data Kit to stitch together a collection of S3 files.



.. code-block:: python

    import earth_data_kit as edk

    # Initialize the Dataset using the S3 engine.
    dataset_id = "example_s3_dataset"
    # Replace the bucket name and path with your actual S3 location.
    source = "s3://your-bucket-name/path/to/data"
    engine = "s3"

    ds = edk.stitching.Dataset(dataset_id, source, engine)

    # Set the temporal bounds for the dataset (e.g., using January 2017 as an example)
    start_date = datetime.datetime(2017, 1, 1)
    end_date = datetime.datetime(2017, 1, 31)
    ds.set_timebounds(start_date, end_date)

    # Define the spatial bounding box (min_lon, min_lat, max_lon, max_lat)
    bbox = (19.3044861183, 39.624997667, 21.0200403175, 42.6882473822)
    # Specify the grid file that maps the dataset's grid system (e.g., a KML file)
    grid_file = "path/to/grid/file.kml"

    # Define a function to extract grid components (horizontal 'h' and vertical 'v') from a grid file row.
    def extract_grid_components(row):
        import re
        match = re.search(r"h:(\d+)\s+v:(\d+)", row.Name)
        if match:
            return {"h": f"{int(match.group(1)):02d}", "v": f"{int(match.group(2)):02d}"}
        return {}

    ds.set_spacebounds(bbox, grid_file, extract_grid_components)

    # Discover the available scene files within the defined spatial and temporal bounds.
    ds.discover()

    # Retrieve and display the list of available bands from the dataset.
    available_bands = ds.get_bands()
    print("Discovered bands:", available_bands)
    
    # Optionally, configure GDAL options (e.g., setting the target spatial reference).
    ds.set_target_options({
        "-t_srs": "EPSG:3857",
    })

    # Define the ordered list of band descriptions you wish to stitch together.
    bands = ["red", "green", "blue"]

    # Create the stitched VRTs from the provided S3 data.
    ds.to_vrts(bands)